{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\porti\\\\Desktop\\\\quote-machine\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nlibrary.add(fab);\n\nconst App = () => {\n  const [quotes, setQuotes] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [chuckFacts, setChuckFacts] = useState(\"\");\n  let randomQuote = Math.floor(Math.random() * 1642);\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(json => {\n      setQuotes(json);\n      setIsLoaded(true);\n    });\n\n    if (isLoaded === true) {\n      setText(quotes[randomQuote].text);\n      setAuthor(quotes[randomQuote].author);\n    }\n  }, [isLoaded]);\n\n  const getNewQuote = () => {\n    setText(quotes[randomQuote].text);\n    setAuthor(quotes[randomQuote].author);\n  };\n\n  const getChucked = () => {\n    fetch(\"https://matchilling-chuck-norris-jokes-v1.p.rapidapi.com/jokes/random\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"matchilling-chuck-norris-jokes-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"6de16f353cmshe9e7a959c0d8cfdp1116c4jsn88b2de39cb74\",\n        accept: \"application/json\"\n      }\n    }).then(response => {\n      response.json().then(json => setChuckFacts(json.value));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__quote\",\n    id: \"quote-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"quote__text\",\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, `\"${text}\"`, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quote__author\",\n    id: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, author !== null ? ` ${author}` : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote__controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    id: \"new-quote\",\n    onClick: getNewQuote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"New quote\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    id: \"tweet-quote\",\n    href: `https://twitter.com/intent/tweet?text=${text} ${author}`,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: [\"fab\", \"twitter\"],\n    size: \"lg\",\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), `Tweet `)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getChucked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Get Chucked!\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, chuckFacts))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/porti/Desktop/quote-machine/src/App.js"],"names":["React","useState","useEffect","library","fab","FontAwesomeIcon","add","App","quotes","setQuotes","isLoaded","setIsLoaded","text","setText","author","setAuthor","chuckFacts","setChuckFacts","randomQuote","Math","floor","random","fetch","then","res","json","getNewQuote","getChucked","method","headers","accept","response","value","catch","err","console","log","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(fab);\n\nconst App = () => {\n  const [quotes, setQuotes] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [chuckFacts, setChuckFacts] = useState(\"\");\n\n  let randomQuote = Math.floor(Math.random() * 1642);\n\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((res) => res.json())\n      .then((json) => {\n        setQuotes(json);\n        setIsLoaded(true);\n      });\n\n    if (isLoaded === true) {\n      setText(quotes[randomQuote].text);\n      setAuthor(quotes[randomQuote].author);\n    }\n  }, [isLoaded]);\n\n  const getNewQuote = () => {\n    setText(quotes[randomQuote].text);\n    setAuthor(quotes[randomQuote].author);\n  };\n\n  const getChucked = () => {\n    fetch(\n      \"https://matchilling-chuck-norris-jokes-v1.p.rapidapi.com/jokes/random\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"matchilling-chuck-norris-jokes-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"6de16f353cmshe9e7a959c0d8cfdp1116c4jsn88b2de39cb74\",\n          accept: \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        response.json().then((json) => setChuckFacts(json.value));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__quote\" id=\"quote-box\">\n        <h3 className=\"quote__text\" id=\"text\">\n          {`\"${text}\"`}\n          <span className=\"quote__author\" id=\"author\">\n            {author !== null ? ` ${author}` : \"\"}\n          </span>\n        </h3>\n\n        <div className=\"quote__controls\">\n          <button className=\"btn\" id=\"new-quote\" onClick={getNewQuote}>\n            New quote\n          </button>\n          <button className=\"btn\">\n            <a\n              id=\"tweet-quote\"\n              href={`https://twitter.com/intent/tweet?text=${text} ${author}`}\n              target=\"_blank\"\n            >\n              <FontAwesomeIcon\n                icon={[\"fab\", \"twitter\"]}\n                size=\"lg\"\n                style={{ marginRight: 5 }}\n              ></FontAwesomeIcon>\n              {`Tweet `}\n            </a>\n          </button>\n          <button onClick={getChucked}>Get Chucked!</button>\n          <h1>{chuckFacts}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}