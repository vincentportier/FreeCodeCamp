{"ast":null,"code":"var util = require('util');\n\nvar Stream = require('stream').Stream;\n\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\n\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n}\n\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function (options) {\n  var combinedStream = new this();\n  options = options || {};\n\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function (stream) {\n  return typeof stream !== 'function' && typeof stream !== 'string' && typeof stream !== 'boolean' && typeof stream !== 'number' && !Buffer.isBuffer(stream);\n};\n\nCombinedStream.prototype.append = function (stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n\n  return this;\n};\n\nCombinedStream.prototype.pipe = function (dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function () {\n  this._currentStream = null;\n\n  var stream = this._streams.shift();\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function (stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function (stream) {\n  this._currentStream = stream;\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {\n      end: false\n    });\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function (stream) {\n  var self = this;\n  stream.on('error', function (err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function (data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function () {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function () {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n\n    this._getNext();\n  }\n\n  if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function () {\n  this._reset();\n\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function () {\n  this._reset();\n\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function () {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function () {\n  this._updateDataSize();\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message = 'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function () {\n  this.dataSize = 0;\n  var self = this;\n\n  this._streams.forEach(function (stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function (err) {\n  this._reset();\n\n  this.emit('error', err);\n};","map":{"version":3,"sources":["C:/Users/porti/Desktop/quote-machine/node_modules/unirest/node_modules/combined-stream/lib/combined_stream.js"],"names":["util","require","Stream","DelayedStream","module","exports","CombinedStream","writable","readable","dataSize","maxDataSize","pauseStreams","_released","_streams","_currentStream","inherits","create","options","combinedStream","option","isStreamLike","stream","Buffer","isBuffer","prototype","append","newStream","Infinity","pauseStream","on","_checkDataSize","bind","_handleErrors","pause","push","pipe","dest","call","resume","_getNext","shift","end","_pipeNext","getStream","value","write","self","err","_emitError","data","emit","_reset","destroy","_updateDataSize","message","Error","forEach"],"mappings":"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","sourcesContent":["var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n"]},"metadata":{},"sourceType":"script"}