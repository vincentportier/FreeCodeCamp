{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\porti\\\\Desktop\\\\quote-machine\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst App = () => {\n  const [text, setText] = useState(\"test quote\");\n  const [author, setAuthor] = useState(\"test author\");\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(json => {\n      let randomQuote = Math.floor(Math.random() * 1642);\n      setText(json[randomQuote].text);\n      setAuthor(json[randomQuote].author);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__quote\",\n    id: \"quote-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"quote__text\",\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, `\"${text}\"`, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quote__author\",\n    id: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, ` -${author}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote__controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"quote__newQuoteButton\",\n    id: \"new-quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"New quote\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    className: \"quote__tweetQuote\",\n    id: \"tweet-quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"tweet quote\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/porti/Desktop/quote-machine/src/App.js"],"names":["React","useState","useEffect","App","text","setText","author","setAuthor","fetch","then","res","json","randomQuote","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,YAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,aAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAlB;AACAV,MAAAA,OAAO,CAACM,IAAI,CAACC,WAAD,CAAJ,CAAkBR,IAAnB,CAAP;AACAG,MAAAA,SAAS,CAACI,IAAI,CAACC,WAAD,CAAJ,CAAkBN,MAAnB,CAAT;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAA4B,IAAA,EAAE,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,IAAGF,IAAK,GADZ,eAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,EAAE,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,KAAIE,MAAO,EADf,CAFF,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,EAAE,EAAC,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAG,IAAA,IAAI,EAAC,EAAR;AAAW,IAAA,SAAS,EAAC,mBAArB;AAAyC,IAAA,EAAE,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CARF,CADF,CADF;AAqBD,CAnCD;;AAqCA,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst App = () => {\n  const [text, setText] = useState(\"test quote\");\n  const [author, setAuthor] = useState(\"test author\");\n\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((res) => res.json())\n      .then((json) => {\n        let randomQuote = Math.floor(Math.random() * 1642);\n        setText(json[randomQuote].text);\n        setAuthor(json[randomQuote].author);\n      });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__quote\" id=\"quote-box\">\n        <h3 className=\"quote__text\" id=\"text\">\n          {`\"${text}\"`}\n          <span className=\"quote__author\" id=\"author\">\n            {` -${author}`}\n          </span>\n        </h3>\n\n        <div className=\"quote__controls\">\n          <button className=\"quote__newQuoteButton\" id=\"new-quote\">\n            New quote\n          </button>\n          <a href=\"\" className=\"quote__tweetQuote\" id=\"tweet-quote\">\n            tweet quote\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}