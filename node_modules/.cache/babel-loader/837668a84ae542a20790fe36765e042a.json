{"ast":null,"code":"/**\n * Unirest for Node.js\n *\n * @author Nijko Yonskai\n * @copyright 2013-2015\n * @license MIT\n */\n\n/**\n * Module Dependencies\n */\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nvar QueryString = require('querystring');\n\nvar FormData = require('form-data');\n\nvar Stream = require('stream');\n\nvar mime = require('mime');\n\nvar zlib = require('zlib');\n\nvar path = require('path');\n\nvar URL = require('url');\n\nvar fs = require('fs');\n/**\n * Define form mime type\n */\n\n\nmime.define({\n  'application/x-www-form-urlencoded': ['form', 'urlencoded', 'form-data']\n});\n/**\n * Initialize our Rest Container\n *\n * @type {Object}\n */\n\nvar Unirest = function (method, uri, headers, body, callback) {\n  var unirest = function (uri, headers, body, callback) {\n    var $this = {\n      /**\n       * Stream Multipart form-data request\n       *\n       * @type {Boolean}\n       */\n      _stream: false,\n\n      /**\n       * Container to hold multipart form data for processing upon request.\n       *\n       * @type {Array}\n       * @private\n       */\n      _multipart: [],\n\n      /**\n       * Container to hold form data for processing upon request.\n       *\n       * @type {Array}\n       * @private\n       */\n      _form: [],\n\n      /**\n       * Request option container for details about the request.\n       *\n       * @type {Object}\n       */\n      options: {\n        /**\n         * Url obtained from request method arguments.\n         *\n         * @type {String}\n         */\n        url: uri,\n\n        /**\n         * Method obtained from request method arguments.\n         *\n         * @type {String}\n         */\n        method: method,\n\n        /**\n         * List of headers with case-sensitive fields.\n         *\n         * @type {Object}\n         */\n        headers: {}\n      },\n      hasHeader: function (name) {\n        var headers;\n        var lowercaseHeaders;\n        name = name.toLowerCase();\n        headers = Object.keys($this.options.headers);\n        lowercaseHeaders = headers.map(function (header) {\n          return header.toLowerCase();\n        });\n\n        for (var i = 0; i < lowercaseHeaders.length; i++) {\n          if (lowercaseHeaders[i] === name) {\n            return headers[i];\n          }\n        }\n\n        return false;\n      },\n\n      /**\n       * Turn on multipart-form streaming\n       *\n       * @return {Object}\n       */\n      stream: function () {\n        $this._stream = true;\n        return this;\n      },\n\n      /**\n       * Attaches a field to the multipart-form request, with pre-processing.\n       *\n       * @param  {String} name\n       * @param  {String} value\n       * @return {Object}\n       */\n      field: function (name, value, options) {\n        return handleField(name, value, options);\n      },\n\n      /**\n       * Attaches a file to the multipart-form request.\n       *\n       * @param  {String} name\n       * @param  {String|Object} path\n       * @return {Object}\n       */\n      attach: function (name, path, options) {\n        options = options || {};\n        options.attachment = true;\n        return handleField(name, path, options);\n      },\n\n      /**\n       * Attaches field to the multipart-form request, with no pre-processing.\n       *\n       * @param  {String} name\n       * @param  {String|Object} path\n       * @param  {Object} options\n       * @return {Object}\n       */\n      rawField: function (name, value, options) {\n        $this._multipart.push({\n          name: name,\n          value: value,\n          options: options,\n          attachment: options.attachment || false\n        });\n      },\n\n      /**\n       * Basic Header Authentication Method\n       *\n       * Supports user being an Object to reflect Request\n       * Supports user, password to reflect SuperAgent\n       *\n       * @param  {String|Object} user\n       * @param  {String} password\n       * @param  {Boolean} sendImmediately\n       * @return {Object}\n       */\n      auth: function (user, password, sendImmediately) {\n        $this.options.auth = is(user).a(Object) ? user : {\n          user: user,\n          password: password,\n          sendImmediately: sendImmediately\n        };\n        return $this;\n      },\n\n      /**\n       * Sets header field to value\n       *\n       * @param  {String} field Header field\n       * @param  {String} value Header field value\n       * @return {Object}\n       */\n      header: function (field, value) {\n        if (is(field).a(Object)) {\n          for (var key in field) {\n            if (Object.prototype.hasOwnProperty.call(field, key)) {\n              $this.header(key, field[key]);\n            }\n          }\n\n          return $this;\n        }\n\n        var existingHeaderName = $this.hasHeader(field);\n        $this.options.headers[existingHeaderName || field] = value;\n        return $this;\n      },\n\n      /**\n       * Serialize value as querystring representation, and append or set on `Request.options.url`\n       *\n       * @param  {String|Object} value\n       * @return {Object}\n       */\n      query: function (value) {\n        if (is(value).a(Object)) value = Unirest.serializers.form(value);\n        if (!value.length) return $this;\n        $this.options.url += (does($this.options.url).contain('?') ? '&' : '?') + value;\n        return $this;\n      },\n\n      /**\n       * Set _content-type_ header with type passed through `mime.getType()` when necessary.\n       *\n       * @param  {String} type\n       * @return {Object}\n       */\n      type: function (type) {\n        $this.header('Content-Type', does(type).contain('/') ? type : mime.getType(type));\n        return $this;\n      },\n\n      /**\n       * Data marshalling for HTTP request body data\n       *\n       * Determines whether type is `form` or `json`.\n       * For irregular mime-types the `.type()` method is used to infer the `content-type` header.\n       *\n       * When mime-type is `application/x-www-form-urlencoded` data is appended rather than overwritten.\n       *\n       * @param  {Mixed} data\n       * @return {Object}\n       */\n      send: function (data) {\n        var type = $this.options.headers[$this.hasHeader('content-type')];\n\n        if ((is(data).a(Object) || is(data).a(Array)) && !Buffer.isBuffer(data)) {\n          if (!type) {\n            $this.type('form');\n            type = $this.options.headers[$this.hasHeader('content-type')];\n            $this.options.body = Unirest.serializers.form(data);\n          } else if (~type.indexOf('json')) {\n            $this.options.json = true;\n\n            if ($this.options.body && is($this.options.body).a(Object)) {\n              for (var key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                  $this.options.body[key] = data[key];\n                }\n              }\n            } else {\n              $this.options.body = data;\n            }\n          } else {\n            $this.options.body = Unirest.Request.serialize(data, type);\n          }\n        } else if (is(data).a(String)) {\n          if (!type) {\n            $this.type('form');\n            type = $this.options.headers[$this.hasHeader('content-type')];\n          }\n\n          if (type === 'application/x-www-form-urlencoded') {\n            $this.options.body = $this.options.body ? $this.options.body + '&' + data : data;\n          } else {\n            $this.options.body = ($this.options.body || '') + data;\n          }\n        } else {\n          $this.options.body = data;\n        }\n\n        return $this;\n      },\n\n      /**\n       * Takes multipart options and places them on `options.multipart` array.\n       * Transforms body when an `Object` or _content-type_ is present.\n       *\n       * Example:\n       *\n       *      Unirest.get('http://google.com').part({\n       *        'content-type': 'application/json',\n       *        body: {\n       *          phrase: 'Hello'\n       *        }\n       *      }).part({\n       *        'content-type': 'application/json',\n       *        body: {\n       *          phrase: 'World'\n       *        }\n       *      }).end(function (response) {})\n       *\n       * @param  {Object|String} options When an Object, headers should be placed directly on the object,\n       *                                 not under a child property.\n       * @return {Object}\n       */\n      part: function (options) {\n        if (!$this._multipart) {\n          $this.options.multipart = [];\n        }\n\n        if (is(options).a(Object)) {\n          if (options['content-type']) {\n            var type = Unirest.type(options['content-type'], true);\n            if (type) options.body = Unirest.Response.parse(options.body);\n          } else {\n            if (is(options.body).a(Object)) {\n              options.body = Unirest.serializers.json(options.body);\n            }\n          }\n\n          $this.options.multipart.push(options);\n        } else {\n          $this.options.multipart.push({\n            body: options\n          });\n        }\n\n        return $this;\n      },\n\n      /**\n       * Instructs the Request to be retried if specified error status codes (4xx, 5xx, ETIMEDOUT) are returned.\n       * Retries are delayed with an exponential backoff.\n       *\n       * @param {(err: Error) => boolean} [callback] - Invoked on response error. Return false to stop next request.\n       * @param {Object} [options] - Optional retry configuration to override defaults.\n       * @param {number} [options.attempts=3] - The number of retry attempts.\n       * @param {number} [options.delayInMs=250] - The delay in milliseconds (delayInMs *= delayMulti)\n       * @param {number} [options.delayMulti=2] - The multiplier of delayInMs after each attempt.\n       * @param {Array<string|number>} [options.statusCodes=[\"ETIMEDOUT\", \"5xx\"]] - The status codes to retry on.\n       * @return {Object}\n       */\n      retry: function (callback, options) {\n        $this.options.retry = {\n          callback: typeof callback === \"function\" ? callback : null,\n          attempts: options && +options.attempts || 3,\n          delayInMs: options && +options.delayInMs || 250,\n          delayMulti: options && +options.delayMulti || 2,\n          statusCodes: (options && options.statusCodes || [\"ETIMEDOUT\", \"5xx\"]).slice(0)\n        };\n        return $this;\n      },\n\n      /**\n       * Proxies the call to end. This adds support for using promises as well as async/await.\n       *\n       * @param  {Function} callback\n       * @return {Promise}\n       **/\n      then: function (callback) {\n        return new Promise((resolve, reject) => {\n          this.end(result => {\n            try {\n              resolve(callback(result));\n            } catch (err) {\n              reject(err);\n            }\n          });\n        });\n      },\n\n      /**\n       * Sends HTTP Request and awaits Response finalization. Request compression and Response decompression occurs here.\n       * Upon HTTP Response post-processing occurs and invokes `callback` with a single argument, the `[Response](#response)` object.\n       *\n       * @param  {Function} callback\n       * @return {Object}\n       */\n      end: function (callback) {\n        var self = this;\n        var Request;\n        var header;\n        var parts;\n        var form;\n\n        function handleRetriableRequestResponse(result) {\n          // If retries is not defined or all attempts tried, return true to invoke end's callback.\n          if ($this.options.retry === undefined || $this.options.retry.attempts === 0) {\n            return true;\n          } // If status code is not listed, abort with return true to invoke end's callback.\n\n\n          var isStatusCodeDefined = function (code, codes) {\n            if (codes.indexOf(code) !== -1) {\n              return true;\n            }\n\n            return codes.reduce(function (p, c) {\n              return p || String(code).split(\"\").every(function (ch, i) {\n                return ch === \"x\" || ch === c[i];\n              });\n            }, false);\n          }(result.code || result.error && result.error.code, $this.options.retry.statusCodes);\n\n          if (!isStatusCodeDefined) {\n            return true;\n          }\n\n          if ($this.options.retry.callback) {\n            var isContinue = $this.options.retry.callback(result); // If retry callback returns false, stop retries and invoke end's callback.\n\n            if (isContinue === false) {\n              return true;\n            }\n          }\n\n          setTimeout(function () {\n            self.end(callback);\n          }, $this.options.retry.delayInMs);\n          $this.options.retry.attempts--;\n          $this.options.retry.delayInMs *= $this.options.retry.delayMulti; // Return false to not invoke end's callback.\n\n          return false;\n        }\n\n        function handleRequestResponse(error, response, body) {\n          var result = {};\n          var status;\n          var data;\n          var type; // Handle pure error\n\n          if (error && !response) {\n            result.error = error;\n\n            if (handleRetriableRequestResponse(result) && callback) {\n              callback(result);\n            }\n\n            return;\n          } // Handle No Response...\n          // This is weird.\n\n\n          if (!response) {\n            console.log('This is odd, report this action / request to: http://github.com/mashape/unirest-nodejs');\n            result.error = {\n              message: 'No response found.'\n            };\n\n            if (handleRetriableRequestResponse(result) && callback) {\n              callback(result);\n            }\n\n            return;\n          } // Create response reference\n\n\n          result = response; // Create response status reference\n\n          status = response.statusCode; // Normalize MSIE response to HTTP 204\n\n          status = status === 1223 ? 204 : status; // Obtain status range typecode (1, 2, 3, 4, 5, etc.)\n\n          type = status / 100 | 0; // Generate sugar helper properties for status information\n\n          result.code = status;\n          result.status = status;\n          result.statusType = type;\n          result.info = type === 1;\n          result.ok = type === 2;\n          result.clientError = type === 4;\n          result.serverError = type === 5;\n          result.error = type === 4 || type === 5 ? function generateErrorMessage() {\n            var msg = 'got ' + result.status + ' response';\n            var err = new Error(msg);\n            err.status = result.status;\n            return err;\n          }() : false; // Iterate over Response Status Codes and generate more sugar\n\n          for (var name in Unirest.Response.statusCodes) {\n            result[name] = Unirest.Response.statusCodes[name] === status;\n          } // Cookie Holder\n\n\n          result.cookies = {}; // Cookie Sugar Method\n\n          result.cookie = function (name) {\n            return result.cookies[name];\n          };\n\n          function setCookie(cookie) {\n            var crumbs = Unirest.trim(cookie).split('=');\n            var key = Unirest.trim(crumbs[0]);\n            var value = Unirest.trim(crumbs.slice(1).join('='));\n\n            if (crumbs[0] && crumbs[0] !== '') {\n              result.cookies[key] = value === '' ? true : value;\n            }\n          }\n\n          if (response.cookies && is(response.cookies).a(Object) && Object.keys(response.cookies).length > 0) {\n            result.cookies = response.cookies;\n          } else {\n            // Handle cookies to be set\n            var cookies = response.headers['set-cookie'];\n\n            if (cookies && is(cookies).a(Array)) {\n              for (var index = 0; index < cookies.length; index++) {\n                var entry = cookies[index];\n\n                if (is(entry).a(String) && does(entry).contain(';')) {\n                  entry.split(';').forEach(setCookie);\n                }\n              }\n            } // Handle cookies that have been set\n\n\n            cookies = response.headers.cookie;\n\n            if (cookies && is(cookies).a(String)) {\n              cookies.split(';').forEach(setCookie);\n            }\n          } // Obtain response body\n\n\n          body = body || response.body;\n          result.raw_body = body;\n          result.headers = response.headers; // Handle Response Body\n\n          if (body) {\n            type = Unirest.type(result.headers['content-type'], true);\n            if (type) data = Unirest.Response.parse(body, type);else data = body;\n          }\n\n          result.body = data;\n          handleRetriableRequestResponse(result) && callback && callback(result);\n        }\n\n        function handleGZIPResponse(response) {\n          if (/^(deflate|gzip)$/.test(response.headers['content-encoding'])) {\n            var unzip = zlib.createUnzip();\n            var stream = new Stream();\n            var _on = response.on;\n            var decoder; // Keeping node happy\n\n            stream.req = response.req; // Make sure we emit prior to processing\n\n            unzip.on('error', function (error) {\n              // Catch the parser error when there is no content\n              if (error.errno === zlib.Z_BUF_ERROR || error.errno === zlib.Z_DATA_ERROR) {\n                stream.emit('end');\n                return;\n              }\n\n              stream.emit('error', error);\n            }); // Start the processing\n\n            response.pipe(unzip); // Ensure encoding is captured\n\n            response.setEncoding = function (type) {\n              decoder = new StringDecoder(type);\n            }; // Capture decompression and decode with captured encoding\n\n\n            unzip.on('data', function (buffer) {\n              if (!decoder) return stream.emit('data', buffer);\n              var string = decoder.write(buffer);\n              if (string.length) stream.emit('data', string);\n            }); // Emit yoself\n\n            unzip.on('end', function () {\n              stream.emit('end');\n            });\n\n            response.on = function (type, next) {\n              if (type === 'data' || type === 'end') {\n                stream.on(type, next);\n              } else if (type === 'error') {\n                _on.call(response, type, next);\n              } else {\n                _on.call(response, type, next);\n              }\n            };\n          }\n        }\n\n        function handleFormData(form) {\n          for (var i = 0; i < $this._multipart.length; i++) {\n            var item = $this._multipart[i];\n\n            if (item.attachment && is(item.value).a(String)) {\n              if (does(item.value).contain('http://') || does(item.value).contain('https://')) {\n                item.value = Unirest.request(item.value);\n              } else {\n                item.value = fs.createReadStream(path.resolve(item.value));\n              }\n            }\n\n            form.append(item.name, item.value, item.options);\n          }\n\n          return form;\n        }\n\n        if ($this._multipart.length && !$this._stream) {\n          header = $this.options.headers[$this.hasHeader('content-type')];\n          parts = URL.parse($this.options.url);\n          form = new FormData();\n\n          if (header) {\n            $this.options.headers['content-type'] = header.split(';')[0] + '; boundary=' + form.getBoundary();\n          } else {\n            $this.options.headers['content-type'] = 'multipart/form-data; boundary=' + form.getBoundary();\n          }\n\n          function authn(auth) {\n            if (!auth) return null;\n            if (typeof auth === 'string') return auth;\n            if (auth.user && auth.pass) return auth.user + ':' + auth.pass;\n            return auth;\n          }\n\n          return handleFormData(form).submit({\n            protocol: parts.protocol,\n            port: parts.port,\n            // Formdata doesn't expect port to be included with host\n            // so we use hostname rather than host\n            host: parts.hostname,\n            path: parts.path,\n            method: $this.options.method,\n            headers: $this.options.headers,\n            auth: authn($this.options.auth || parts.auth)\n          }, function (error, response) {\n            var decoder = new StringDecoder('utf8');\n\n            if (error) {\n              return handleRequestResponse(error, response);\n            }\n\n            if (!response.body) {\n              response.body = '';\n            } // Node 10+\n\n\n            response.resume(); // GZIP, Feel me?\n\n            handleGZIPResponse(response); // Fallback\n\n            response.on('data', function (chunk) {\n              if (typeof chunk === 'string') response.body += chunk;else response.body += decoder.write(chunk);\n            }); // After all, we end up here\n\n            response.on('end', function () {\n              return handleRequestResponse(error, response);\n            });\n          });\n        }\n\n        Request = Unirest.request($this.options, handleRequestResponse);\n        Request.on('response', handleGZIPResponse);\n\n        if ($this._multipart.length && $this._stream) {\n          handleFormData(Request.form());\n        }\n\n        return Request;\n      }\n    };\n    /**\n     * Alias for _.header_\n     * @type {Function}\n     */\n\n    $this.headers = $this.header;\n    /**\n     * Alias for _.header_\n     *\n     * @type {Function}\n     */\n\n    $this.set = $this.header;\n    /**\n     * Alias for _.end_\n     *\n     * @type {Function}\n     */\n\n    $this.complete = $this.end;\n    /**\n     * Aliases for _.end_\n     *\n     * @type {Object}\n     */\n\n    $this.as = {\n      json: $this.end,\n      binary: $this.end,\n      string: $this.end\n    };\n    /**\n     * Handles Multipart Field Processing\n     *\n     * @param {String} name\n     * @param {Mixed} value\n     * @param {Object} options\n     */\n\n    function handleField(name, value, options) {\n      var serialized;\n      var length;\n      var key;\n      var i;\n      options = options || {\n        attachment: false\n      };\n\n      if (is(name).a(Object)) {\n        for (key in name) {\n          if (Object.prototype.hasOwnProperty.call(name, key)) {\n            handleField(key, name[key], options);\n          }\n        }\n      } else {\n        if (is(value).a(Array)) {\n          for (i = 0, length = value.length; i < length; i++) {\n            serialized = handleFieldValue(value[i]);\n\n            if (serialized) {\n              $this.rawField(name, serialized, options);\n            }\n          }\n        } else if (value != null) {\n          $this.rawField(name, handleFieldValue(value), options);\n        }\n      }\n\n      return $this;\n    }\n    /**\n     * Handles Multipart Value Processing\n     *\n     * @param {Mixed} value\n     */\n\n\n    function handleFieldValue(value) {\n      if (!(value instanceof Buffer || typeof value === 'string')) {\n        if (is(value).a(Object)) {\n          if (value instanceof fs.FileReadStream) {\n            return value;\n          } else {\n            return Unirest.serializers.json(value);\n          }\n        } else {\n          return value.toString();\n        }\n      } else return value;\n    }\n\n    function setupOption(name, ref) {\n      $this[name] = function (arg) {\n        $this.options[ref || name] = arg;\n        return $this;\n      };\n    } // Iterates over a list of option methods to generate the chaining\n    // style of use you see in Superagent and jQuery.\n\n\n    for (var x in Unirest.enum.options) {\n      if (Object.prototype.hasOwnProperty.call(Unirest.enum.options, x)) {\n        var option = Unirest.enum.options[x];\n        var reference = null;\n\n        if (option.indexOf(':') > -1) {\n          option = option.split(':');\n          reference = option[1];\n          option = option[0];\n        }\n\n        setupOption(option, reference);\n      }\n    }\n\n    if (headers && typeof headers === 'function') {\n      callback = headers;\n      headers = null;\n    } else if (body && typeof body === 'function') {\n      callback = body;\n      body = null;\n    }\n\n    if (headers) $this.set(headers);\n    if (body) $this.send(body);\n    return callback ? $this.end(callback) : $this;\n  };\n\n  return uri ? unirest(uri, headers, body, callback) : unirest;\n};\n/**\n * Expose the underlying layer.\n */\n\n\nUnirest.request = require('request');\nUnirest.cookie = Unirest.request.cookie;\nUnirest.pipe = Unirest.request.pipe;\n/**\n * Mime-type lookup / parser.\n *\n * @param  {String} type\n * @param  {Boolean} parse Should we parse?\n * @return {String}\n */\n\nUnirest.type = function (type, parse) {\n  if (typeof type !== 'string') return false;\n  return parse ? type.split(/ *; */).shift() : Unirest.types[type] || type;\n};\n/**\n * Utility method to trim strings.\n *\n * @type {String}\n */\n\n\nUnirest.trim = ''.trim ? function (s) {\n  return s.trim();\n} : function (s) {\n  return s.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n};\n/**\n * Parser methods for different data types.\n *\n * @type {Object}\n */\n\nUnirest.parsers = {\n  string: function (data) {\n    var obj = {};\n    var pairs = data.split('&');\n    var parts;\n    var pair;\n\n    for (var i = 0, len = pairs.length; i < len; ++i) {\n      pair = pairs[i];\n      parts = pair.split('=');\n      obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n    }\n\n    return obj;\n  },\n  json: function (data) {\n    try {\n      data = JSON.parse(data);\n    } catch (e) {}\n\n    return data;\n  }\n};\n/**\n * Serialization methods for different data types.\n *\n * @type {Object}\n */\n\nUnirest.serializers = {\n  form: function (obj) {\n    return QueryString.stringify(obj);\n  },\n  json: function (obj) {\n    return JSON.stringify(obj);\n  }\n};\n/**\n * Unirest Request Utility Methods\n *\n * @type {Object}\n */\n\nUnirest.Request = {\n  serialize: function (string, type) {\n    var serializer = Unirest.firstMatch(type, Unirest.enum.serialize);\n    return serializer ? serializer(string) : string;\n  },\n  uid: function (len) {\n    var output = '';\n    var chars = 'abcdefghijklmnopqrstuvwxyz123456789';\n    var nchars = chars.length;\n\n    while (len--) output += chars[Math.random() * nchars | 0];\n\n    return output;\n  }\n};\n/**\n * Unirest Response Utility Methods\n *\n * @type {Object}\n */\n\nUnirest.Response = {\n  parse: function (string, type) {\n    var parser = Unirest.firstMatch(type, Unirest.enum.parse);\n    return parser ? parser(string) : string;\n  },\n  parseHeader: function (str) {\n    var lines = str.split(/\\r?\\n/);\n    var fields = {};\n    var index;\n    var line;\n    var field;\n    var val; // Trailing CRLF\n\n    lines.pop();\n\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i];\n      index = line.indexOf(':');\n      field = line.slice(0, index).toLowerCase();\n      val = Unirest.trim(line.slice(index + 1));\n      fields[field] = val;\n    }\n\n    return fields;\n  },\n  statusCodes: {\n    'created': 201,\n    'accepted': 202,\n    'nonAuthoritativeInformation': 203,\n    'noContent': 204,\n    'resetContent': 205,\n    'partialContent': 206,\n    'multiStatus': 207,\n    'alreadyReported': 208,\n    'imUsed': 226,\n    'multipleChoices': 300,\n    'movedPermanently': 301,\n    'found': 302,\n    'seeOther': 303,\n    'notModified': 304,\n    'useProxy': 305,\n    'temporaryRedirect': 307,\n    'permanentRedirect': 308,\n    'badRequest': 400,\n    'unauthorized': 401,\n    'paymentRequired': 402,\n    'forbidden': 403,\n    'notFound': 404,\n    'methodNotAllowed': 405,\n    'notAcceptable': 406,\n    'proxyAuthenticationRequired': 407,\n    'requestTimeout': 408,\n    'conflict': 409,\n    'gone': 410,\n    'lengthRequired': 411,\n    'preconditionFailed': 412,\n    'requestEntityTooLarge': 413,\n    'uriTooLong': 414,\n    'unsupportedMediaType': 415,\n    'rangeNotSatisfiable': 416,\n    'expectationFailed': 417,\n    'misdirectedRequest': 421,\n    'unprocessableEntity': 422,\n    'locked': 423,\n    'failedDependency': 424,\n    'upgradeRequired': 426,\n    'preconditionRequired': 428,\n    'tooManyRequests': 429,\n    'requestHeaderFieldsTooLarge': 431,\n    'internalServerError': 500,\n    'notImplemented': 501,\n    'badGateway': 502,\n    'serviceUnavailable': 503,\n    'gatewayTimeout': 504,\n    'httpVersionNotSupported': 505,\n    'variantAlsoNegotiates': 506,\n    'insufficientStorage': 507,\n    'loopDetected': 508,\n    'notExtended': 510\n  }\n};\n/**\n * Expose cookie store (tough-cookie)\n *\n * @return {Function} Cookie Store\n */\n\nUnirest.jar = function (options) {\n  var jar = Unirest.request.jar();\n  options = options || {}; // Because Requests aliases toughcookie rather than returning.\n\n  if (options.store) {\n    jar._jar.store = options.store;\n  }\n\n  if (options.rejectPublicSuffixes) {\n    jar._jar.rejectPublicSuffixes = options.rejectPublicSuffixes;\n  } // Alias helper methods\n\n\n  jar.add = jar.setCookie;\n  jar.toString = jar.getCookieString; // Export\n\n  return jar;\n};\n/**\n * Enum Structures\n *\n * @type {Object}\n */\n\n\nUnirest.enum = {\n  serialize: {\n    'application/x-www-form-urlencoded': Unirest.serializers.form,\n    'application/json': Unirest.serializers.json,\n    '+json': Unirest.serializers.json\n  },\n  parse: {\n    'application/x-www-form-urlencoded': Unirest.parsers.string,\n    'application/json': Unirest.parsers.json,\n    '+json': Unirest.parsers.json\n  },\n  methods: ['GET', 'HEAD', 'PUT', 'POST', 'PATCH', 'DELETE', 'OPTIONS'],\n  options: ['uri:url', 'redirects:maxRedirects', 'redirect:followRedirect', 'url', 'method', 'qs', 'form', 'json', 'multipart', 'followRedirect', 'followAllRedirects', 'maxRedirects', 'encoding', 'pool', 'timeout', 'proxy', 'oauth', 'hawk', 'time', 'ssl:strictSSL', 'strictSSL', 'jar', 'cookies:jar', 'aws', 'httpSignature', 'localAddress', 'ip:localAddress', 'secureProtocol', 'forever']\n};\n/**\n * Returns a list of values obtained by checking the specified string\n * whether it contains array value or object key, when true the value\n * is appended to the list to be returned.\n *\n * @param  {String} string String to be tested\n * @param  {Object|Array} map    Values / Keys to test against string.\n * @return {Array} List of values truthfully matched against string.\n */\n\nUnirest.matches = function matches(string, map) {\n  var results = [];\n\n  for (var key in map) {\n    if (typeof map.length !== 'undefined') {\n      key = map[key];\n    }\n\n    if (string.indexOf(key) !== -1) {\n      results.push(map[key]);\n    }\n  }\n\n  return results;\n};\n/**\n * Returns the first value obtained through #matches\n *\n * @see #matches\n * @param  {String} string String to be tested\n * @param  {Object|Array} map Values / Keys to test against string.\n * @return {Mixed} First match value\n */\n\n\nUnirest.firstMatch = function firstMatch(string, map) {\n  return Unirest.matches(string, map)[0];\n};\n/**\n * Generate sugar for request library.\n *\n * This allows us to mock super-agent chaining style while using request library under the hood.\n */\n\n\nfunction setupMethod(method) {\n  Unirest[method] = Unirest(method);\n}\n\nfor (var i = 0; i < Unirest.enum.methods.length; i++) {\n  var method = Unirest.enum.methods[i].toLowerCase();\n  setupMethod(method);\n}\n/**\n * Simple Utility Methods for checking information about a value.\n *\n * @param  {Mixed}  value  Could be anything.\n * @return {Object}\n */\n\n\nfunction is(value) {\n  return {\n    a: function (check) {\n      if (check.prototype) check = check.prototype.constructor.name;\n      var type = Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\n      return value != null && type === check.toLowerCase();\n    }\n  };\n}\n/**\n * Simple Utility Methods for checking information about a value.\n *\n * @param  {Mixed}  value  Could be anything.\n * @return {Object}\n */\n\n\nfunction does(value) {\n  var arrayIndexOf = Array.indexOf ? function (arr, obj, from) {\n    return arr.indexOf(obj, from);\n  } : function (arr, obj, from) {\n    var l = arr.length;\n    var i = from ? parseInt(1 * from + (from < 0 ? l : 0), 10) : 0;\n    i = i < 0 ? 0 : i;\n\n    for (; i < l; i++) if (i in arr && arr[i] === obj) return i;\n\n    return -1;\n  };\n  return {\n    startWith: function (string) {\n      if (is(value).a(String)) return value.slice(0, string.length) === string;\n      if (is(value).a(Array)) return value[0] === string;\n      return false;\n    },\n    endWith: function (string) {\n      if (is(value).a(String)) return value.slice(-string.length) === string;\n      if (is(value).a(Array)) return value[value.length - 1] === string;\n      return false;\n    },\n    contain: function (field) {\n      if (is(value).a(String)) return value.indexOf(field) > -1;\n      if (is(value).a(Object)) return Object.prototype.hasOwnProperty.call(value, field);\n      if (is(value).a(Array)) return !!~arrayIndexOf(value, field);\n      return false;\n    }\n  };\n}\n/**\n * Expose the Unirest Container\n */\n\n\nmodule.exports = exports = Unirest;","map":{"version":3,"sources":["C:/Users/porti/Desktop/quote-machine/node_modules/unirest/index.js"],"names":["StringDecoder","require","QueryString","FormData","Stream","mime","zlib","path","URL","fs","define","Unirest","method","uri","headers","body","callback","unirest","$this","_stream","_multipart","_form","options","url","hasHeader","name","lowercaseHeaders","toLowerCase","Object","keys","map","header","i","length","stream","field","value","handleField","attach","attachment","rawField","push","auth","user","password","sendImmediately","is","a","key","prototype","hasOwnProperty","call","existingHeaderName","query","serializers","form","does","contain","type","getType","send","data","Array","Buffer","isBuffer","indexOf","json","Request","serialize","String","part","multipart","Response","parse","retry","attempts","delayInMs","delayMulti","statusCodes","slice","then","Promise","resolve","reject","end","result","err","self","parts","handleRetriableRequestResponse","undefined","isStatusCodeDefined","code","codes","reduce","p","c","split","every","ch","error","isContinue","setTimeout","handleRequestResponse","response","status","console","log","message","statusCode","statusType","info","ok","clientError","serverError","generateErrorMessage","msg","Error","cookies","cookie","setCookie","crumbs","trim","join","index","entry","forEach","raw_body","handleGZIPResponse","test","unzip","createUnzip","_on","on","decoder","req","errno","Z_BUF_ERROR","Z_DATA_ERROR","emit","pipe","setEncoding","buffer","string","write","next","handleFormData","item","request","createReadStream","append","getBoundary","authn","pass","submit","protocol","port","host","hostname","resume","chunk","set","complete","as","binary","serialized","handleFieldValue","FileReadStream","toString","setupOption","ref","arg","x","enum","option","reference","shift","types","s","replace","parsers","obj","pairs","pair","len","decodeURIComponent","JSON","e","stringify","serializer","firstMatch","uid","output","chars","nchars","Math","random","parser","parseHeader","str","lines","fields","line","val","pop","jar","store","_jar","rejectPublicSuffixes","add","getCookieString","methods","matches","results","setupMethod","check","constructor","arrayIndexOf","arr","from","l","parseInt","startWith","endWith","module","exports"],"mappings":"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","sourcesContent":["/**\n * Unirest for Node.js\n *\n * @author Nijko Yonskai\n * @copyright 2013-2015\n * @license MIT\n */\n\n/**\n * Module Dependencies\n */\n\nvar StringDecoder = require('string_decoder').StringDecoder\nvar QueryString = require('querystring')\nvar FormData = require('form-data')\nvar Stream = require('stream')\nvar mime = require('mime')\nvar zlib = require('zlib')\nvar path = require('path')\nvar URL = require('url')\nvar fs = require('fs')\n\n/**\n * Define form mime type\n */\nmime.define({\n  'application/x-www-form-urlencoded': ['form', 'urlencoded', 'form-data']\n})\n\n/**\n * Initialize our Rest Container\n *\n * @type {Object}\n */\nvar Unirest = function (method, uri, headers, body, callback) {\n  var unirest = function (uri, headers, body, callback) {\n    var $this = {\n      /**\n       * Stream Multipart form-data request\n       *\n       * @type {Boolean}\n       */\n      _stream: false,\n\n      /**\n       * Container to hold multipart form data for processing upon request.\n       *\n       * @type {Array}\n       * @private\n       */\n      _multipart: [],\n\n      /**\n       * Container to hold form data for processing upon request.\n       *\n       * @type {Array}\n       * @private\n       */\n      _form: [],\n\n      /**\n       * Request option container for details about the request.\n       *\n       * @type {Object}\n       */\n      options: {\n        /**\n         * Url obtained from request method arguments.\n         *\n         * @type {String}\n         */\n        url: uri,\n\n        /**\n         * Method obtained from request method arguments.\n         *\n         * @type {String}\n         */\n        method: method,\n\n        /**\n         * List of headers with case-sensitive fields.\n         *\n         * @type {Object}\n         */\n        headers: {}\n      },\n\n      hasHeader: function (name) {\n        var headers\n        var lowercaseHeaders\n\n        name = name.toLowerCase()\n        headers = Object.keys($this.options.headers)\n        lowercaseHeaders = headers.map(function (header) {\n          return header.toLowerCase()\n        })\n\n        for (var i = 0; i < lowercaseHeaders.length; i++) {\n          if (lowercaseHeaders[i] === name) {\n            return headers[i]\n          }\n        }\n\n        return false\n      },\n\n      /**\n       * Turn on multipart-form streaming\n       *\n       * @return {Object}\n       */\n      stream: function () {\n        $this._stream = true\n        return this\n      },\n\n      /**\n       * Attaches a field to the multipart-form request, with pre-processing.\n       *\n       * @param  {String} name\n       * @param  {String} value\n       * @return {Object}\n       */\n      field: function (name, value, options) {\n        return handleField(name, value, options)\n      },\n\n      /**\n       * Attaches a file to the multipart-form request.\n       *\n       * @param  {String} name\n       * @param  {String|Object} path\n       * @return {Object}\n       */\n      attach: function (name, path, options) {\n        options = options || {}\n        options.attachment = true\n        return handleField(name, path, options)\n      },\n\n      /**\n       * Attaches field to the multipart-form request, with no pre-processing.\n       *\n       * @param  {String} name\n       * @param  {String|Object} path\n       * @param  {Object} options\n       * @return {Object}\n       */\n      rawField: function (name, value, options) {\n        $this._multipart.push({\n          name: name,\n          value: value,\n          options: options,\n          attachment: options.attachment || false\n        })\n      },\n\n      /**\n       * Basic Header Authentication Method\n       *\n       * Supports user being an Object to reflect Request\n       * Supports user, password to reflect SuperAgent\n       *\n       * @param  {String|Object} user\n       * @param  {String} password\n       * @param  {Boolean} sendImmediately\n       * @return {Object}\n       */\n      auth: function (user, password, sendImmediately) {\n        $this.options.auth = (is(user).a(Object)) ? user : {\n          user: user,\n          password: password,\n          sendImmediately: sendImmediately\n        }\n\n        return $this\n      },\n\n      /**\n       * Sets header field to value\n       *\n       * @param  {String} field Header field\n       * @param  {String} value Header field value\n       * @return {Object}\n       */\n      header: function (field, value) {\n        if (is(field).a(Object)) {\n          for (var key in field) {\n            if (Object.prototype.hasOwnProperty.call(field, key)) {\n              $this.header(key, field[key])\n            }\n          }\n\n          return $this\n        }\n\n        var existingHeaderName = $this.hasHeader(field)\n        $this.options.headers[existingHeaderName || field] = value\n\n        return $this\n      },\n\n      /**\n       * Serialize value as querystring representation, and append or set on `Request.options.url`\n       *\n       * @param  {String|Object} value\n       * @return {Object}\n       */\n      query: function (value) {\n        if (is(value).a(Object)) value = Unirest.serializers.form(value)\n        if (!value.length) return $this\n        $this.options.url += (does($this.options.url).contain('?') ? '&' : '?') + value\n        return $this\n      },\n\n      /**\n       * Set _content-type_ header with type passed through `mime.getType()` when necessary.\n       *\n       * @param  {String} type\n       * @return {Object}\n       */\n      type: function (type) {\n        $this.header('Content-Type', does(type).contain('/')\n          ? type\n          : mime.getType(type))\n        return $this\n      },\n\n      /**\n       * Data marshalling for HTTP request body data\n       *\n       * Determines whether type is `form` or `json`.\n       * For irregular mime-types the `.type()` method is used to infer the `content-type` header.\n       *\n       * When mime-type is `application/x-www-form-urlencoded` data is appended rather than overwritten.\n       *\n       * @param  {Mixed} data\n       * @return {Object}\n       */\n      send: function (data) {\n        var type = $this.options.headers[$this.hasHeader('content-type')]\n\n        if ((is(data).a(Object) || is(data).a(Array)) && !Buffer.isBuffer(data)) {\n          if (!type) {\n            $this.type('form')\n            type = $this.options.headers[$this.hasHeader('content-type')]\n            $this.options.body = Unirest.serializers.form(data)\n          } else if (~type.indexOf('json')) {\n            $this.options.json = true\n\n            if ($this.options.body && is($this.options.body).a(Object)) {\n              for (var key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                  $this.options.body[key] = data[key]\n                }\n              }\n            } else {\n              $this.options.body = data\n            }\n          } else {\n            $this.options.body = Unirest.Request.serialize(data, type)\n          }\n        } else if (is(data).a(String)) {\n          if (!type) {\n            $this.type('form')\n            type = $this.options.headers[$this.hasHeader('content-type')]\n          }\n\n          if (type === 'application/x-www-form-urlencoded') {\n            $this.options.body = $this.options.body\n              ? $this.options.body + '&' + data\n              : data\n          } else {\n            $this.options.body = ($this.options.body || '') + data\n          }\n        } else {\n          $this.options.body = data\n        }\n\n        return $this\n      },\n\n      /**\n       * Takes multipart options and places them on `options.multipart` array.\n       * Transforms body when an `Object` or _content-type_ is present.\n       *\n       * Example:\n       *\n       *      Unirest.get('http://google.com').part({\n       *        'content-type': 'application/json',\n       *        body: {\n       *          phrase: 'Hello'\n       *        }\n       *      }).part({\n       *        'content-type': 'application/json',\n       *        body: {\n       *          phrase: 'World'\n       *        }\n       *      }).end(function (response) {})\n       *\n       * @param  {Object|String} options When an Object, headers should be placed directly on the object,\n       *                                 not under a child property.\n       * @return {Object}\n       */\n      part: function (options) {\n        if (!$this._multipart) {\n          $this.options.multipart = []\n        }\n\n        if (is(options).a(Object)) {\n          if (options['content-type']) {\n            var type = Unirest.type(options['content-type'], true)\n            if (type) options.body = Unirest.Response.parse(options.body)\n          } else {\n            if (is(options.body).a(Object)) {\n              options.body = Unirest.serializers.json(options.body)\n            }\n          }\n\n          $this.options.multipart.push(options)\n        } else {\n          $this.options.multipart.push({\n            body: options\n          })\n        }\n\n        return $this\n      },\n\n      /**\n       * Instructs the Request to be retried if specified error status codes (4xx, 5xx, ETIMEDOUT) are returned.\n       * Retries are delayed with an exponential backoff.\n       *\n       * @param {(err: Error) => boolean} [callback] - Invoked on response error. Return false to stop next request.\n       * @param {Object} [options] - Optional retry configuration to override defaults.\n       * @param {number} [options.attempts=3] - The number of retry attempts.\n       * @param {number} [options.delayInMs=250] - The delay in milliseconds (delayInMs *= delayMulti)\n       * @param {number} [options.delayMulti=2] - The multiplier of delayInMs after each attempt.\n       * @param {Array<string|number>} [options.statusCodes=[\"ETIMEDOUT\", \"5xx\"]] - The status codes to retry on.\n       * @return {Object}\n       */\n      retry: function (callback, options) {\n\n        $this.options.retry = {\n          callback: typeof callback === \"function\" ? callback : null,\n          attempts: options && +options.attempts || 3,\n          delayInMs: options && +options.delayInMs || 250,\n          delayMulti: options && +options.delayMulti || 2,\n          statusCodes: (options && options.statusCodes || [\"ETIMEDOUT\", \"5xx\"]).slice(0)\n        };\n\n        return $this\n      },\n\n      /**\n       * Proxies the call to end. This adds support for using promises as well as async/await.\n       *\n       * @param  {Function} callback\n       * @return {Promise}\n       **/\n      then: function (callback) {\n        return new Promise((resolve, reject) => {\n          this.end(result => {\n            try {\n              resolve(callback(result))\n            } catch (err) {\n              reject(err)\n            }\n          })\n        })\n      },\n\n      /**\n       * Sends HTTP Request and awaits Response finalization. Request compression and Response decompression occurs here.\n       * Upon HTTP Response post-processing occurs and invokes `callback` with a single argument, the `[Response](#response)` object.\n       *\n       * @param  {Function} callback\n       * @return {Object}\n       */\n      end: function (callback) {\n        var self = this\n        var Request\n        var header\n        var parts\n        var form\n\n        function handleRetriableRequestResponse (result) {\n\n          // If retries is not defined or all attempts tried, return true to invoke end's callback.\n          if ($this.options.retry === undefined || $this.options.retry.attempts === 0) {\n            return true\n          }\n\n          // If status code is not listed, abort with return true to invoke end's callback.\n          var isStatusCodeDefined = (function (code, codes) {\n\n            if (codes.indexOf(code) !== -1) {\n              return true\n            }\n\n            return codes.reduce(function (p, c) {\n                return p || String(code).split(\"\").every(function (ch, i) {\n                  return ch === \"x\" || ch === c[i]\n                })\n              }, false)\n\n          }(result.code || result.error && result.error.code, $this.options.retry.statusCodes))\n\n          if (!isStatusCodeDefined) {\n            return true\n          }\n\n          if ($this.options.retry.callback) {\n            var isContinue = $this.options.retry.callback(result)\n            // If retry callback returns false, stop retries and invoke end's callback.\n            if (isContinue === false) {\n              return true;\n            }\n          }\n\n          setTimeout(function () {\n            self.end(callback)\n          }, $this.options.retry.delayInMs)\n\n          $this.options.retry.attempts--\n          $this.options.retry.delayInMs *= $this.options.retry.delayMulti\n\n          // Return false to not invoke end's callback.\n          return false\n        }\n\n        function handleRequestResponse (error, response, body) {\n          var result = {}\n          var status\n          var data\n          var type\n\n          // Handle pure error\n          if (error && !response) {\n            result.error = error\n\n            if (handleRetriableRequestResponse(result) && callback) {\n              callback(result)\n            }\n\n            return\n          }\n\n          // Handle No Response...\n          // This is weird.\n          if (!response) {\n            console.log('This is odd, report this action / request to: http://github.com/mashape/unirest-nodejs')\n\n            result.error = {\n              message: 'No response found.'\n            }\n\n            if (handleRetriableRequestResponse(result) && callback) {\n              callback(result)\n            }\n\n            return\n          }\n\n          // Create response reference\n          result = response\n\n          // Create response status reference\n          status = response.statusCode\n\n          // Normalize MSIE response to HTTP 204\n          status = (status === 1223 ? 204 : status)\n\n          // Obtain status range typecode (1, 2, 3, 4, 5, etc.)\n          type = status / 100 | 0\n\n          // Generate sugar helper properties for status information\n          result.code = status\n          result.status = status\n          result.statusType = type\n          result.info = type === 1\n          result.ok = type === 2\n          result.clientError = type === 4\n          result.serverError = type === 5\n          result.error = (type === 4 || type === 5) ? (function generateErrorMessage () {\n            var msg = 'got ' + result.status + ' response'\n            var err = new Error(msg)\n            err.status = result.status\n            return err\n          })() : false\n\n          // Iterate over Response Status Codes and generate more sugar\n          for (var name in Unirest.Response.statusCodes) {\n            result[name] = Unirest.Response.statusCodes[name] === status\n          }\n\n          // Cookie Holder\n          result.cookies = {}\n\n          // Cookie Sugar Method\n          result.cookie = function (name) {\n            return result.cookies[name]\n          }\n\n          function setCookie (cookie) {\n            var crumbs = Unirest.trim(cookie).split('=')\n            var key = Unirest.trim(crumbs[0])\n            var value = Unirest.trim(crumbs.slice(1).join('='))\n\n            if (crumbs[0] && crumbs[0] !== '') {\n              result.cookies[key] = value === '' ? true : value\n            }\n          }\n\n          if (response.cookies && is(response.cookies).a(Object) && Object.keys(response.cookies).length > 0) {\n            result.cookies = response.cookies\n          } else {\n            // Handle cookies to be set\n            var cookies = response.headers['set-cookie']\n            if (cookies && is(cookies).a(Array)) {\n              for (var index = 0; index < cookies.length; index++) {\n                var entry = cookies[index]\n\n                if (is(entry).a(String) && does(entry).contain(';')) {\n                  entry.split(';').forEach(setCookie)\n                }\n              }\n            }\n\n            // Handle cookies that have been set\n            cookies = response.headers.cookie\n            if (cookies && is(cookies).a(String)) {\n              cookies.split(';').forEach(setCookie)\n            }\n          }\n\n          // Obtain response body\n          body = body || response.body\n          result.raw_body = body\n          result.headers = response.headers\n\n          // Handle Response Body\n          if (body) {\n            type = Unirest.type(result.headers['content-type'], true)\n            if (type) data = Unirest.Response.parse(body, type)\n            else data = body\n          }\n\n          result.body = data\n\n          ;(handleRetriableRequestResponse(result)) && (callback) && callback(result)\n        }\n\n        function handleGZIPResponse (response) {\n          if (/^(deflate|gzip)$/.test(response.headers['content-encoding'])) {\n            var unzip = zlib.createUnzip()\n            var stream = new Stream()\n            var _on = response.on\n            var decoder\n\n            // Keeping node happy\n            stream.req = response.req\n\n            // Make sure we emit prior to processing\n            unzip.on('error', function (error) {\n              // Catch the parser error when there is no content\n              if (error.errno === zlib.Z_BUF_ERROR || error.errno === zlib.Z_DATA_ERROR) {\n                stream.emit('end')\n                return\n              }\n\n              stream.emit('error', error)\n            })\n\n            // Start the processing\n            response.pipe(unzip)\n\n            // Ensure encoding is captured\n            response.setEncoding = function (type) {\n              decoder = new StringDecoder(type)\n            }\n\n            // Capture decompression and decode with captured encoding\n            unzip.on('data', function (buffer) {\n              if (!decoder) return stream.emit('data', buffer)\n              var string = decoder.write(buffer)\n              if (string.length) stream.emit('data', string)\n            })\n\n            // Emit yoself\n            unzip.on('end', function () {\n              stream.emit('end')\n            })\n\n            response.on = function (type, next) {\n              if (type === 'data' || type === 'end') {\n                stream.on(type, next)\n              } else if (type === 'error') {\n                _on.call(response, type, next)\n              } else {\n                _on.call(response, type, next)\n              }\n            }\n          }\n        }\n\n        function handleFormData (form) {\n          for (var i = 0; i < $this._multipart.length; i++) {\n            var item = $this._multipart[i]\n\n            if (item.attachment && is(item.value).a(String)) {\n              if (does(item.value).contain('http://') || does(item.value).contain('https://')) {\n                item.value = Unirest.request(item.value)\n              } else {\n                item.value = fs.createReadStream(path.resolve(item.value))\n              }\n            }\n\n            form.append(item.name, item.value, item.options)\n          }\n\n          return form\n        }\n\n        if ($this._multipart.length && !$this._stream) {\n          header = $this.options.headers[$this.hasHeader('content-type')]\n          parts = URL.parse($this.options.url)\n          form = new FormData()\n\n          if (header) {\n            $this.options.headers['content-type'] = header.split(';')[0] + '; boundary=' + form.getBoundary()\n          } else {\n            $this.options.headers['content-type'] = 'multipart/form-data; boundary=' + form.getBoundary()\n          }\n\n          function authn(auth) {\n              if (!auth) return null;\n              if (typeof auth === 'string') return auth;\n              if (auth.user && auth.pass) return auth.user + ':' + auth.pass;\n              return auth;\n          }\n\n          return handleFormData(form).submit({\n            protocol: parts.protocol,\n            port: parts.port,\n            // Formdata doesn't expect port to be included with host\n            // so we use hostname rather than host\n            host: parts.hostname,\n            path: parts.path,\n            method: $this.options.method,\n            headers: $this.options.headers,\n            auth: authn($this.options.auth || parts.auth)\n          }, function (error, response) {\n            var decoder = new StringDecoder('utf8')\n\n            if (error) {\n              return handleRequestResponse(error, response)\n            }\n\n            if (!response.body) {\n              response.body = ''\n            }\n\n            // Node 10+\n            response.resume()\n\n            // GZIP, Feel me?\n            handleGZIPResponse(response)\n\n            // Fallback\n            response.on('data', function (chunk) {\n              if (typeof chunk === 'string') response.body += chunk\n              else response.body += decoder.write(chunk)\n            })\n\n            // After all, we end up here\n            response.on('end', function () {\n              return handleRequestResponse(error, response)\n            })\n          })\n        }\n\n        Request = Unirest.request($this.options, handleRequestResponse)\n        Request.on('response', handleGZIPResponse)\n\n        if ($this._multipart.length && $this._stream) {\n          handleFormData(Request.form())\n        }\n\n        return Request\n      }\n    }\n\n    /**\n     * Alias for _.header_\n     * @type {Function}\n     */\n    $this.headers = $this.header\n\n    /**\n     * Alias for _.header_\n     *\n     * @type {Function}\n     */\n    $this.set = $this.header\n\n    /**\n     * Alias for _.end_\n     *\n     * @type {Function}\n     */\n    $this.complete = $this.end\n\n    /**\n     * Aliases for _.end_\n     *\n     * @type {Object}\n     */\n\n    $this.as = {\n      json: $this.end,\n      binary: $this.end,\n      string: $this.end\n    }\n\n    /**\n     * Handles Multipart Field Processing\n     *\n     * @param {String} name\n     * @param {Mixed} value\n     * @param {Object} options\n     */\n    function handleField (name, value, options) {\n      var serialized\n      var length\n      var key\n      var i\n\n      options = options || { attachment: false }\n\n      if (is(name).a(Object)) {\n        for (key in name) {\n          if (Object.prototype.hasOwnProperty.call(name, key)) {\n            handleField(key, name[key], options)\n          }\n        }\n      } else {\n        if (is(value).a(Array)) {\n          for (i = 0, length = value.length; i < length; i++) {\n            serialized = handleFieldValue(value[i])\n            if (serialized) {\n              $this.rawField(name, serialized, options)\n            }\n          }\n        } else if (value != null) {\n          $this.rawField(name, handleFieldValue(value), options)\n        }\n      }\n\n      return $this\n    }\n\n    /**\n     * Handles Multipart Value Processing\n     *\n     * @param {Mixed} value\n     */\n    function handleFieldValue (value) {\n      if (!(value instanceof Buffer || typeof value === 'string')) {\n        if (is(value).a(Object)) {\n          if (value instanceof fs.FileReadStream) {\n            return value\n          } else {\n            return Unirest.serializers.json(value)\n          }\n        } else {\n          return value.toString()\n        }\n      } else return value\n    }\n\n    function setupOption (name, ref) {\n      $this[name] = function (arg) {\n        $this.options[ref || name] = arg\n        return $this\n      }\n    }\n\n    // Iterates over a list of option methods to generate the chaining\n    // style of use you see in Superagent and jQuery.\n    for (var x in Unirest.enum.options) {\n      if (Object.prototype.hasOwnProperty.call(Unirest.enum.options, x)) {\n        var option = Unirest.enum.options[x]\n        var reference = null\n\n        if (option.indexOf(':') > -1) {\n          option = option.split(':')\n          reference = option[1]\n          option = option[0]\n        }\n\n        setupOption(option, reference)\n      }\n    }\n\n    if (headers && typeof headers === 'function') {\n      callback = headers\n      headers = null\n    } else if (body && typeof body === 'function') {\n      callback = body\n      body = null\n    }\n\n    if (headers) $this.set(headers)\n    if (body) $this.send(body)\n\n    return callback ? $this.end(callback) : $this\n  }\n\n  return uri ? unirest(uri, headers, body, callback) : unirest\n}\n\n/**\n * Expose the underlying layer.\n */\nUnirest.request = require('request')\nUnirest.cookie = Unirest.request.cookie\nUnirest.pipe = Unirest.request.pipe\n\n/**\n * Mime-type lookup / parser.\n *\n * @param  {String} type\n * @param  {Boolean} parse Should we parse?\n * @return {String}\n */\nUnirest.type = function (type, parse) {\n  if (typeof type !== 'string') return false\n  return parse ? type.split(/ *; */).shift() : (Unirest.types[type] || type)\n}\n\n/**\n * Utility method to trim strings.\n *\n * @type {String}\n */\nUnirest.trim = ''.trim\n  ? function (s) { return s.trim() }\n  : function (s) { return s.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '') }\n\n/**\n * Parser methods for different data types.\n *\n * @type {Object}\n */\nUnirest.parsers = {\n  string: function (data) {\n    var obj = {}\n    var pairs = data.split('&')\n    var parts\n    var pair\n\n    for (var i = 0, len = pairs.length; i < len; ++i) {\n      pair = pairs[i]\n      parts = pair.split('=')\n      obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1])\n    }\n\n    return obj\n  },\n\n  json: function (data) {\n    try {\n      data = JSON.parse(data)\n    } catch (e) {}\n\n    return data\n  }\n}\n\n/**\n * Serialization methods for different data types.\n *\n * @type {Object}\n */\nUnirest.serializers = {\n  form: function (obj) {\n    return QueryString.stringify(obj)\n  },\n\n  json: function (obj) {\n    return JSON.stringify(obj)\n  }\n}\n\n/**\n * Unirest Request Utility Methods\n *\n * @type {Object}\n */\nUnirest.Request = {\n  serialize: function (string, type) {\n    var serializer = Unirest.firstMatch(type, Unirest.enum.serialize)\n    return serializer ? serializer(string) : string\n  },\n\n  uid: function (len) {\n    var output = ''\n    var chars = 'abcdefghijklmnopqrstuvwxyz123456789'\n    var nchars = chars.length\n    while (len--) output += chars[Math.random() * nchars | 0]\n    return output\n  }\n}\n\n/**\n * Unirest Response Utility Methods\n *\n * @type {Object}\n */\nUnirest.Response = {\n  parse: function (string, type) {\n    var parser = Unirest.firstMatch(type, Unirest.enum.parse)\n    return parser ? parser(string) : string\n  },\n\n  parseHeader: function (str) {\n    var lines = str.split(/\\r?\\n/)\n    var fields = {}\n    var index\n    var line\n    var field\n    var val\n\n    // Trailing CRLF\n    lines.pop()\n\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i]\n      index = line.indexOf(':')\n      field = line.slice(0, index).toLowerCase()\n      val = Unirest.trim(line.slice(index + 1))\n      fields[field] = val\n    }\n\n    return fields\n  },\n\n  statusCodes: {\n    'created': 201,\n    'accepted': 202,\n    'nonAuthoritativeInformation': 203,\n    'noContent': 204,\n    'resetContent': 205,\n    'partialContent': 206,\n    'multiStatus': 207,\n    'alreadyReported': 208,\n    'imUsed': 226,\n    'multipleChoices': 300,\n    'movedPermanently': 301,\n    'found': 302,\n    'seeOther': 303,\n    'notModified': 304,\n    'useProxy': 305,\n    'temporaryRedirect': 307,\n    'permanentRedirect': 308,\n    'badRequest': 400,\n    'unauthorized': 401,\n    'paymentRequired': 402,\n    'forbidden': 403,\n    'notFound': 404,\n    'methodNotAllowed': 405,\n    'notAcceptable': 406,\n    'proxyAuthenticationRequired': 407,\n    'requestTimeout': 408,\n    'conflict': 409,\n    'gone': 410,\n    'lengthRequired': 411,\n    'preconditionFailed': 412,\n    'requestEntityTooLarge': 413,\n    'uriTooLong': 414,\n    'unsupportedMediaType': 415,\n    'rangeNotSatisfiable': 416,\n    'expectationFailed': 417,\n    'misdirectedRequest': 421,\n    'unprocessableEntity': 422,\n    'locked': 423,\n    'failedDependency': 424,\n    'upgradeRequired': 426,\n    'preconditionRequired': 428,\n    'tooManyRequests': 429,\n    'requestHeaderFieldsTooLarge': 431,\n    'internalServerError': 500,\n    'notImplemented': 501,\n    'badGateway': 502,\n    'serviceUnavailable': 503,\n    'gatewayTimeout': 504,\n    'httpVersionNotSupported': 505,\n    'variantAlsoNegotiates': 506,\n    'insufficientStorage': 507,\n    'loopDetected': 508,\n    'notExtended': 510\n  }\n}\n\n/**\n * Expose cookie store (tough-cookie)\n *\n * @return {Function} Cookie Store\n */\nUnirest.jar = function (options) {\n  var jar = Unirest.request.jar()\n  options = options || {}\n\n  // Because Requests aliases toughcookie rather than returning.\n  if (options.store) {\n    jar._jar.store = options.store\n  }\n\n  if (options.rejectPublicSuffixes) {\n    jar._jar.rejectPublicSuffixes = options.rejectPublicSuffixes\n  }\n\n  // Alias helper methods\n  jar.add = jar.setCookie\n  jar.toString = jar.getCookieString\n\n  // Export\n  return jar\n}\n\n/**\n * Enum Structures\n *\n * @type {Object}\n */\nUnirest.enum = {\n  serialize: {\n    'application/x-www-form-urlencoded': Unirest.serializers.form,\n    'application/json': Unirest.serializers.json,\n    '+json': Unirest.serializers.json\n  },\n\n  parse: {\n    'application/x-www-form-urlencoded': Unirest.parsers.string,\n    'application/json': Unirest.parsers.json,\n    '+json': Unirest.parsers.json\n  },\n\n  methods: [\n    'GET',\n    'HEAD',\n    'PUT',\n    'POST',\n    'PATCH',\n    'DELETE',\n    'OPTIONS'\n  ],\n\n  options: [\n    'uri:url', 'redirects:maxRedirects', 'redirect:followRedirect', 'url', 'method', 'qs', 'form', 'json', 'multipart',\n    'followRedirect', 'followAllRedirects', 'maxRedirects', 'encoding', 'pool', 'timeout', 'proxy', 'oauth', 'hawk', 'time',\n    'ssl:strictSSL', 'strictSSL', 'jar', 'cookies:jar', 'aws', 'httpSignature', 'localAddress', 'ip:localAddress', 'secureProtocol', 'forever'\n  ]\n}\n\n/**\n * Returns a list of values obtained by checking the specified string\n * whether it contains array value or object key, when true the value\n * is appended to the list to be returned.\n *\n * @param  {String} string String to be tested\n * @param  {Object|Array} map    Values / Keys to test against string.\n * @return {Array} List of values truthfully matched against string.\n */\nUnirest.matches = function matches (string, map) {\n  var results = []\n\n  for (var key in map) {\n    if (typeof map.length !== 'undefined') {\n      key = map[key]\n    }\n\n    if (string.indexOf(key) !== -1) {\n      results.push(map[key])\n    }\n  }\n\n  return results\n}\n\n/**\n * Returns the first value obtained through #matches\n *\n * @see #matches\n * @param  {String} string String to be tested\n * @param  {Object|Array} map Values / Keys to test against string.\n * @return {Mixed} First match value\n */\nUnirest.firstMatch = function firstMatch (string, map) {\n  return Unirest.matches(string, map)[0]\n}\n\n/**\n * Generate sugar for request library.\n *\n * This allows us to mock super-agent chaining style while using request library under the hood.\n */\nfunction setupMethod (method) {\n  Unirest[method] = Unirest(method)\n}\n\nfor (var i = 0; i < Unirest.enum.methods.length; i++) {\n  var method = Unirest.enum.methods[i].toLowerCase()\n  setupMethod(method)\n}\n\n/**\n * Simple Utility Methods for checking information about a value.\n *\n * @param  {Mixed}  value  Could be anything.\n * @return {Object}\n */\nfunction is (value) {\n  return {\n    a: function (check) {\n      if (check.prototype) check = check.prototype.constructor.name\n      var type = Object.prototype.toString.call(value).slice(8, -1).toLowerCase()\n      return value != null && type === check.toLowerCase()\n    }\n  }\n}\n\n/**\n * Simple Utility Methods for checking information about a value.\n *\n * @param  {Mixed}  value  Could be anything.\n * @return {Object}\n */\nfunction does (value) {\n  var arrayIndexOf = (Array.indexOf ? function (arr, obj, from) {\n    return arr.indexOf(obj, from)\n  } : function (arr, obj, from) {\n    var l = arr.length\n    var i = from ? parseInt((1 * from) + (from < 0 ? l : 0), 10) : 0\n    i = i < 0 ? 0 : i\n    for (; i < l; i++) if (i in arr && arr[i] === obj) return i\n    return -1\n  })\n\n  return {\n    startWith: function (string) {\n      if (is(value).a(String)) return value.slice(0, string.length) === string\n      if (is(value).a(Array)) return value[0] === string\n      return false\n    },\n\n    endWith: function (string) {\n      if (is(value).a(String)) return value.slice(-string.length) === string\n      if (is(value).a(Array)) return value[value.length - 1] === string\n      return false\n    },\n\n    contain: function (field) {\n      if (is(value).a(String)) return value.indexOf(field) > -1\n      if (is(value).a(Object)) return Object.prototype.hasOwnProperty.call(value, field)\n      if (is(value).a(Array)) return !!~arrayIndexOf(value, field)\n      return false\n    }\n  }\n}\n\n/**\n * Expose the Unirest Container\n */\n\nmodule.exports = exports = Unirest\n"]},"metadata":{},"sourceType":"script"}